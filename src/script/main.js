document.addEventListener("DOMContentLoaded", () => {
  // –£—Å—ñ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const navLinks = document.querySelectorAll(".btm-navigation");
  const sections = document.querySelectorAll(".content-section");
  const defaultContent = document.querySelector(".default-section");

  // –ö–Ω–æ–ø–∫–∞ "Services"
  const servicesButton = document.querySelector(".btm-navigation[href='#services']");
  const backToServicesButtons = document.querySelectorAll(".btn-navigation[href='#services']");

  // –ë—É—Ä–≥–µ—Ä-–∫–Ω–æ–ø–∫–∞ —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
  const burgerMenu = document.getElementById("burger-menu");
  const navigation = document.getElementById("navigation");

  // –õ–æ–≥—ñ–∫–∞ –¥–ª—è –±—É—Ä–≥–µ—Ä-–∫–Ω–æ–ø–∫–∏
  burgerMenu.addEventListener("click", () => {
    burgerMenu.classList.toggle("active");
    navigation.classList.toggle("active");
  });

  // –õ–æ–≥—ñ–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  navLinks.forEach((link) => {
    link.addEventListener("click", (event) => {
      event.preventDefault();
      const targetId = link.getAttribute("href").substring(1);
      const targetSection = document.querySelector(`.content-section.${targetId}-section`);

      sections.forEach((section) => section.classList.remove("active"));
      if (defaultContent) {
        defaultContent.classList.remove("active");
      }

      if (targetSection) {
        targetSection.classList.add("active");
      }

      burgerMenu.classList.remove("active");
      navigation.classList.remove("active");
    });
  });

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É —Ä–æ–∑–¥—ñ–ª—É "Services"
  function resetServicesView() {
    const serviceCards = document.querySelectorAll(".service-card");
    const serviceDescriptions = document.querySelectorAll(".service-description");

    // –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∫–∞—Ä—Ç–∫–∏ –ø–æ—Å–ª—É–≥
    serviceCards.forEach((card) => (card.style.display = "block"));

    // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –≤—Å—ñ –æ–ø–∏—Å–∏ –ø–æ—Å–ª—É–≥
    serviceDescriptions.forEach((desc) => (desc.style.display = "none"));

    // –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Ä–æ–∑–¥—ñ–ª "Services"
    sections.forEach((section) => section.classList.remove("active"));
    document.querySelector(".content-section.services-section").classList.add("active");
  }

  // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ "Services" —ñ "Back to Services"
  if (servicesButton) {
    servicesButton.addEventListener("click", () => {
      resetServicesView();
    });
  }

  backToServicesButtons.forEach((button) => {
    button.addEventListener("click", (event) => {
      event.preventDefault();
      resetServicesView();
    });
  });

  // –õ–æ–≥—ñ–∫–∞ –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "–ü–æ—Å–ª—É–≥–∏"
  const serviceCards = document.querySelectorAll(".service-card");
  const serviceDescriptions = document.querySelectorAll(".service-description");

  serviceCards.forEach((card) => {
    card.addEventListener("click", () => {
      // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –≤—Å—ñ –∫–∞—Ä—Ç–∫–∏ –ø–æ—Å–ª—É–≥
      serviceCards.forEach((serviceCard) => {
        serviceCard.style.display = "none";
      });

      // –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –æ–ø–∏—Å
      const descriptionId = card.getAttribute("data-service");
      serviceDescriptions.forEach((description) => {
        if (description.id === `service-description-${descriptionId}`) {
          description.style.display = "block";
        } else {
          description.style.display = "none";
        }
      });
    });
  });

  // –õ–æ–≥—ñ–∫–∞ –¥–ª—è —Ñ–æ—Ä–º–∏
  const form = document.querySelector(".booking-form");
  const orderSection = document.querySelector(".order-section");
  const submitButton = form?.querySelector(".submit-button"); // –ö–Ω–æ–ø–∫–∞ "Submit Booking"
  const requiredFields = form?.querySelectorAll("input[required]"); // –£—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è
  const serviceCheckboxes = form?.querySelectorAll("input[name='services[]']"); // –ß–µ–∫–±–æ–∫—Å–∏ –≤–∏–±–æ—Ä—É –ø–æ—Å–ª—É–≥

  if (form && submitButton) {
    // –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ —Ñ–æ—Ä–º–∏
    const validateForm = () => {
      let isValid = true;

      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω–æ–≥–æ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ–≥–æ –ø–æ–ª—è
      requiredFields.forEach((field) => {
        if (!field.value.trim()) {
          isValid = false;
        }
      });

      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤–∏–±—Ä–∞–Ω–æ —Ö–æ—á–∞ –± –æ–¥–∏–Ω —á–µ–∫–±–æ–∫—Å
      const isServiceSelected = Array.from(serviceCheckboxes).some(
        (checkbox) => checkbox.checked
      );

      if (!isServiceSelected) {
        isValid = false;
      }

      // –ó–º—ñ–Ω–∞ —Å—Ç–∞–Ω—É –∫–Ω–æ–ø–∫–∏
      submitButton.disabled = !isValid;
      submitButton.classList.toggle("active", isValid);
      submitButton.classList.toggle("inactive", !isValid);
    };

    // –î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á—ñ –ø–æ–¥—ñ–π –¥–ª—è –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤ —ñ —á–µ–∫–±–æ–∫—Å—ñ–≤
    requiredFields.forEach((field) => {
      field.addEventListener("input", validateForm);
      field.addEventListener("change", validateForm);
      field.addEventListener("blur", validateForm);
    });

    serviceCheckboxes.forEach((checkbox) => {
      checkbox.addEventListener("change", validateForm);
      checkbox.addEventListener("input", validateForm);
    });

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    validateForm();

    // –õ–æ–≥—ñ–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      const formData = new FormData(form);

      // –î–æ–¥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –¥–æ formData
      const selectedServices = Array.from(serviceCheckboxes)
        .filter((checkbox) => checkbox.checked)
        .map((service) => service.value);

      formData.append("services", selectedServices.join(", "));

      try {
        const response = await fetch("send-mail.php", {
          method: "POST",
          body: formData,
        });
        const result = await response.json();

        console.log("üîπ Server response:", result); // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å–µ—Ä–≤–µ—Ä–∞

        if (result.status === "success") {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ—Å–Ω—É—î –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    let successMessage = document.querySelector(".success-message");

    if (!successMessage) {
        successMessage = document.createElement("div");
        successMessage.classList.add("success-message");
        orderSection.appendChild(successMessage);
    }

    // –î–æ–¥–∞—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      successMessage.innerHTML = `
        <h2>Thank You for Your Booking!</h2>
        <p>We have received your request and will contact you shortly to confirm your booking and discuss any details.</p>
        <p>Have a great day!</p>
      `;


    // –†–æ–±–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∏–¥–∏–º–∏–º
      successMessage.classList.add("active");
      form.style.display = "none"; // –•–æ–≤–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
    }
        else {
          alert("Failed to send your booking request. Please try again.");
        }
      } catch (error) {
        console.error("Error submitting form:", error);
        alert("An error occurred. Please try again later.");
      }
    });
  }
});
